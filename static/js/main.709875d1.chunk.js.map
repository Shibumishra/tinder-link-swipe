{"version":3,"sources":["components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","useState","setError","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","error","className","map","list","preventSwipe","style","backgroundImage","urls","regular","alt_description","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA+CeA,MA1Cf,WAAkB,IAAD,EACaC,mBAAS,MADtB,mBACCC,GADD,aAEmBD,oBAAS,GAF5B,mBAEIE,GAFJ,aAGaF,mBAAS,IAHtB,mBAGNG,EAHM,KAGCC,EAHD,KAoBb,OAfAC,qBAAU,WACNC,MARK,0FASFC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCR,GAAY,GACZE,EAASM,MAEX,SAACC,GACCT,GAAY,GACZD,EAASU,QAGd,IAGD,8BACI,qBAAKC,UAAU,eAAf,SACKT,EAAMU,KAAI,SAAAC,GAAI,OACX,cAAC,IAAD,CACIF,UAAU,QAEVG,aAAc,CAAC,KAAM,QAHzB,SAMI,qBACIC,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAKI,KAAKC,QAAnB,MACxBP,UAAU,OAFd,SAII,6BAAKE,EAAKM,qBARTN,EAAKO,YCpBnBC,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACC,cAAC,EAAD,OCMUW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.709875d1.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport TinderCard from 'react-tinder-card'\r\n\r\nconst Data = \"https://api.unsplash.com/photos/?client_id=cz3bK1TvB5DRNSs7vKNMl7zMvvniAxVsQ0QHJLYfm1E\" \r\n\r\nfunction Cards() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(Data)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIsLoaded(true);\r\n              setItems(result);\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n      }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"tinder_cards\">\r\n                {items.map(list => (\r\n                    <TinderCard\r\n                        className=\"swipe\"\r\n                        key={list.id}\r\n                        preventSwipe={['up', 'down']}\r\n\r\n                    >\r\n                        <div\r\n                            style={{ backgroundImage: `url(${list.urls.regular})` }}\r\n                            className=\"card\"\r\n                        >\r\n                            <h3>{list.alt_description}</h3>\r\n                        </div>\r\n                    </TinderCard>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;\r\n","import React from 'react';\nimport Cards from './components/Cards';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}